#!/bin/bash

# Logo

echo -e "\033[0;34m"
echo "███╗   ██╗ ██████╗ ██████╗ ███████╗   ██╗   ██╗ █████╗ ██╗     ██╗ ██████╗  █████╗ ████████╗ ██████╗ ██████╗ "
echo "████╗  ██║██╔═══██╗██╔══██╗██╔════╝   ██║   ██║██╔══██╗██║     ██║ ██╔══██╗██╔══██╗╚══██╔══╝██╔═══██╗██╔══██╗"
echo "██╔██╗ ██║██║   ██║██║  ██║█████╗     ██║   ██║███████║██║     ██║ ██║  ██║███████║   ██║   ██║   ██║██████╔╝"
echo "██║╚██╗██║██║   ██║██║  ██║██╔══╝     ██║   ██║██╔══██║██║     ██║ ██║  ██║██╔══██║   ██║   ██║   ██║██╔══██╗"
echo "██║ ╚████║╚██████╔╝██████╔╝███████╗   ╚██████╔╝██║  ██║███████║██║ ██████╔╝██║  ██║   ██║   ╚██████╔╝██║  ██║"
echo "╚═╝  ╚═══╝ ╚═════╝ ╚═════╝ ╚══════╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝ ╚═════╝ ╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝"
echo "Gitbook: https://docs.validatorvn.com"
echo "Chanel: https://t.me/ValidatorVN"
echo "Github: https://github.com/NodeValidatorVN"
echo -e "\e[0m"

read -r -p "Enter node moniker: " NODE_MONIKER

CHAIN_ID="blockx_100-1"
CHAIN_DENOM="blockx"
BINARY_NAME="blockxd"
GITHUB="https://github.com/NodeValidatorVN"
BINARY_VERSION_TAG="v10.0.0"

echo -e "Node moniker: ${CYAN}$NODE_MONIKER${NC}"
echo -e "Chain id:     ${CYAN}$CHAIN_ID${NC}"
echo -e "Chain demon:  ${CYAN}$CHAIN_DENOM${NC}"
echo -e "Binary version tag:  ${CYAN}$BINARY_VERSION_TAG${NC}"

sleep 1

echo -e "\e[1m\e[32m1. Updating packages and dependencies--> \e[0m" && sleep 1
#UPDATE APT
sudo apt update && sudo apt upgrade -y
sudo apt install curl tar wget clang pkg-config libssl-dev libleveldb-dev jq build-essential bsdmainutils git make ncdu htop lz4 screen unzip bc fail2ban htop -y

echo -e "\e[1m\e[32m2. Installing GO--> \e[0m" && sleep 1
#INSTALL GO
ver="1.21.5" 
cd $HOME 
wget "https://golang.org/dl/go$ver.linux-amd64.tar.gz" 
sudo rm -rf /usr/local/go 
sudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz" 
rm "go$ver.linux-amd64.tar.gz"

echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile
source $HOME/.bash_profile

echo -e "\e[1m\e[32m3. Downloading and building binaries--> \e[0m" && sleep 1

cd $HOME
rm -rf blockx
curl -LO https://github.com/defi-ventures/blockx-node-public-compiled/releases/download/v10.0.0/blockxd
chmod +x blockxd
mkdir -p $HOME/go/bin/
mv blockxd $HOME/go/bin/

blockxd config chain-id $CHAIN_ID
blockxd init "$NODE_MONIKER" --chain-id $CHAIN_ID

wget -O $HOME/.blockxd/config/genesis.json "https://raw.githubusercontent.com/NodeValidatorVN/GuideNode/main/Blockx/genesis.json"
wget -O $HOME/.blockxd/config/addrbook.json "https://raw.githubusercontent.com/NodeValidatorVN/GuideNode/main/Blockx/addrbook.json"

SEEDS="479dfa1948f49b08810cd16bf6c2d3256ae85423@137.184.7.64:26656,e15f4d31281036c69fa17269d9b26ff8733511c6@147.182.238.235:26656,9b84b33d44a880a520006ae9f75ef030b259cbaf@137.184.38.212:26656,85d0069266e78896f9d9e17915cdfd271ba91dfd@146.190.153.165:26656"
PEERS=""
sed -i 's|^seeds *=.*|seeds = "'$SEEDS'"|; s|^persistent_peers *=.*|persistent_peers = "'$PEERS'"|' $HOME/.blockxd/config/config.toml

sed -i 's|^pruning *=.*|pruning = "custom"|g' $HOME/.blockxd/config/app.toml
sed -i 's|^pruning-keep-recent  *=.*|pruning-keep-recent = "100"|g' $HOME/.blockxd/config/app.toml
sed -i 's|^pruning-interval *=.*|pruning-interval = "10"|g' $HOME/.blockxd/config/app.toml
sed -i 's|^snapshot-interval *=.*|snapshot-interval = 0|g' $HOME/.blockxd/config/app.toml

sed -i 's|^minimum-gas-prices *=.*|minimum-gas-prices = "0abcx"|g' $HOME/.blockxd/config/app.toml
sed -i 's|^prometheus *=.*|prometheus = true|' $HOME/.blockxd/config/config.toml

echo -e "\e[1m\e[32m4. Starting service and synchronization...--> \e[0m" && sleep 1

sudo tee /etc/systemd/system/blockxd.service > /dev/null << EOF
[Unit]
Description=blockxd node
After=network-online.target
[Service]
User=$USER
ExecStart=$(which blockxd) start
Restart=on-failure
RestartSec=10
LimitNOFILE=10000
[Install]
WantedBy=multi-user.target
EOF

blockxd tendermint unsafe-reset-all --home $HOME/.blockxd --keep-addr-book
SNAP_NAME=$(curl -s https://ss.blockx.nodestake.org/ | egrep -o ">20.*\.tar.lz4" | tr -d ">")
curl -o - -L https://ss.blockx.nodestake.org/${SNAP_NAME}  | lz4 -c -d - | tar -x -C $HOME/.blockxd

sudo systemctl daemon-reload
sudo systemctl enable blockxd
sudo systemctl start blockxd
source $HOME/.bash_profile

echo '=============== SETUP FINISHED ==================='
echo -e "Check logs:            ${CYAN}sudo journalctl -u $BINARY_NAME -f --no-hostname -o cat ${NC}"
echo -e "Check synchronization: ${CYAN}$BINARY_NAME status 2>&1 | jq .SyncInfo.catching_up${NC}"
echo -e "More commands:         ${CYAN}$GITHUB${NC}"
